//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Dom Code Generator automation script.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace DomHelpers.SlcConfigurations
{
	using System;

	using Skyline.DataMiner.Net.Messages.SLDataGateway;
	using Skyline.DataMiner.ProjectApi.ServiceManagement.API.Configurations;

	/// <summary>
	/// Exposer-methods for the <see cref="Models.ConfigurationUnit"/> instances.
	/// </summary>
	public static class ConfigurationUnitExposers
	{
		public static readonly Exposer<Models.ConfigurationUnit, Guid> Guid = new Exposer<Models.ConfigurationUnit, Guid>((obj) => obj.ID, String.Join(".", nameof(ConfigurationUnitExposers), nameof(Guid)));
		public static readonly Exposer<Models.ConfigurationUnit, string> Name = new Exposer<Models.ConfigurationUnit, string>((obj) => obj.Name, String.Join(".", nameof(ConfigurationUnitExposers), nameof(Name)));
	}

	/// <summary>
	/// Exposer-methods for the <see cref="Models.NumberParameterOptions"/> instances.
	/// </summary>
	public static class NumberParameterOptionExposers
	{
		public static readonly Exposer<Models.NumberParameterOptions, Guid> Guid = new Exposer<Models.NumberParameterOptions, Guid>((obj) => obj.ID, String.Join(".", nameof(NumberParameterOptionExposers), nameof(Guid)));
	}

	/// <summary>
	/// Exposer-methods for the <see cref="Models.TextParameterOptions"/> instances.
	/// </summary>
	public static class TextParameterOptionExposers
	{
		public static readonly Exposer<Models.TextParameterOptions, Guid> Guid = new Exposer<Models.TextParameterOptions, Guid>((obj) => obj.ID, String.Join(".", nameof(TextParameterOptionExposers), nameof(Guid)));
	}

	/// <summary>
	/// Exposer-methods for the <see cref="Models.DiscreteParameterOptions"/> instances.
	/// </summary>
	public static class DiscreteParameterOptionExposers
	{
		public static readonly Exposer<Models.DiscreteParameterOptions, Guid> Guid = new Exposer<Models.DiscreteParameterOptions, Guid>((obj) => obj.ID, String.Join(".", nameof(DiscreteParameterOptionExposers), nameof(Guid)));
	}

	/// <summary>
	/// Exposer-methods for the <see cref="Models.DiscreteValue"/> instances.
	/// </summary>
	public static class DiscreteValueExposers
	{
		public static readonly Exposer<Models.DiscreteValue, Guid> Guid = new Exposer<Models.DiscreteValue, Guid>((obj) => obj.ID, String.Join(".", nameof(DiscreteValueExposers), nameof(Guid)));
	}

	/// <summary>
	/// Exposer-methods for the <see cref="Models.ConfigurationParameterValue"/> instances.
	/// </summary>
	public static class ConfigurationParameterExposers
	{
		public static readonly Exposer<Models.ConfigurationParameter, Guid> Guid = new Exposer<Models.ConfigurationParameter, Guid>((obj) => obj.ID, String.Join(".", nameof(ConfigurationParameterExposers), nameof(Guid)));
		public static readonly Exposer<Models.ConfigurationParameter, string> Name = new Exposer<Models.ConfigurationParameter, string>((obj) => obj.Name, String.Join(".", nameof(ConfigurationParameterExposers), nameof(Name)));
	}

	/// <summary>
	/// Exposer-methods for the <see cref="Models.ConfigurationParameterValue"/> instances.
	/// </summary>
	public static class ConfigurationParameterValueExposers
	{
		public static readonly Exposer<Models.ConfigurationParameterValue, Guid> Guid = new Exposer<Models.ConfigurationParameterValue, Guid>((obj) => obj.ID, String.Join(".", nameof(ConfigurationParameterValueExposers), nameof(Guid)));
		public static readonly Exposer<Models.ConfigurationParameterValue, string> Label = new Exposer<Models.ConfigurationParameterValue, string>((obj) => obj.Label, String.Join(".", nameof(ConfigurationParameterValueExposers), nameof(Label)));
		public static readonly Exposer<Models.ConfigurationParameterValue, SlcConfigurationsIds.Enums.Type> Type = new Exposer<Models.ConfigurationParameterValue, SlcConfigurationsIds.Enums.Type>((obj) => obj.Type, String.Join(".", nameof(ConfigurationParameterValueExposers), nameof(Type)));
		public static readonly Exposer<Models.ConfigurationParameterValue, string> StringValue = new Exposer<Models.ConfigurationParameterValue, string>((obj) => obj.StringValue, String.Join(".", nameof(ConfigurationParameterValueExposers), nameof(StringValue)));
		public static readonly Exposer<Models.ConfigurationParameterValue, double?> DoubleValue = new Exposer<Models.ConfigurationParameterValue, double?>((obj) => obj.DoubleValue, String.Join(".", nameof(ConfigurationParameterValueExposers), nameof(DoubleValue)));
		public static readonly Exposer<Models.ConfigurationParameterValue, Guid> ConfigurationParameterID = new Exposer<Models.ConfigurationParameterValue, Guid>((obj) => obj.ConfigurationParameterId, String.Join(".", nameof(ConfigurationParameterValueExposers), nameof(ConfigurationParameterID)));
	}
}